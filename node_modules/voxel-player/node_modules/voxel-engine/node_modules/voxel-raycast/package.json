{
  "name": "voxel-raycast",
  "version": "0.0.0",
  "description": "Ray queries for voxel.js",
  "main": "raycast.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/voxel-raycast.git"
  },
  "keywords": [
    "voxel.js",
    "ray",
    "cast",
    "trace",
    "traceRay",
    "query",
    "line"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "BSD",
  "readmeFilename": "README.md",
  "gitHead": "2481aa74301f22753edb43eea568522fe8ee10af",
  "readme": "voxel-raycast\n=============\nRay casting queries for voxel.js\n\nInstallation\n============\nVia npm:\n\n    npm install voxel-raycast\n    \nExample\n=======\nHere is how you could use the library to make a ray query:\n\n    var traceRay = require(\"voxel-raycast\").bind({}, voxels);\n\n    var hit_normal = new Array(3);\n    var hit_position = new Array(3);\n    var hit_block = traceRay([0,0,0], [1,0,0], 10.0, hit_positions, hit_normal);\n    \n    if(hit_block > 0) {\n      console.log(\"Hit:\", hit_block, hit_position, hit_normal);\n    } else {\n      console.log(\"Miss\");\n    }\n    \n\n### `require(\"voxel-raycast\")(voxels, origin, direction, max_d[, hit_position, hit_normal])`\nCasts a ray against a voxel.js game instance.\n\n* `voxels` is the main voxel.js instance\n* `origin` is the origin of the ray\n* `direction` is the direction of the ray\n* `max_d` is a limit on the distance the ray can travel\n* `hit_position` is the point of impact of the ray and the voxel world\n* `hit_normal` is the normal of the ray impact\n\nReturns the block type of the voxel that the ray cast hit, or if no voxel was encountered returns -1.\n\nCredits\n=======\n(c) 2013 Mikola Lysenko. BSD License\n",
  "_id": "voxel-raycast@0.0.0",
  "dist": {
    "shasum": "675d5f67af7d8f3c0127f8596537b4bfa9e47519"
  },
  "_from": "voxel-raycast@0.0.0",
  "_resolved": "https://registry.npmjs.org/voxel-raycast/-/voxel-raycast-0.0.0.tgz"
}
